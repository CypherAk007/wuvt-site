FROM python:2

# WARNING: Do not use this Dockerfile for production installs. It creates a
# temporary database that is stored as part of the image, which you definitely
# don't want for production.

RUN apt-get update && apt-get install -y \
            git \
            libcap-dev \
            libjansson-dev \
            libpcre3-dev \
            libsasl2-dev \
            libyaml-dev \
            redis-server \
            uuid-dev

WORKDIR /usr/src/uwsgi

# prepare uwsgi
RUN wget -O uwsgi-2.0.13.1.tar.gz https://github.com/unbit/uwsgi/archive/2.0.13.1.tar.gz && \
        tar --strip-components=1 -axvf uwsgi-2.0.13.1.tar.gz
COPY uwsgi_profile.ini buildconf/wuvt.ini

# build and install uwsgi
RUN python uwsgiconfig.py --build wuvt && cp uwsgi /usr/local/bin/ && \
        mkdir -p /usr/local/lib/uwsgi/plugins

WORKDIR /usr/src/app

# install python dependencies
COPY requirements.txt /usr/src/app/
RUN pip install --no-cache-dir -r requirements.txt

COPY . /usr/src/app

# create schema and add sample data
RUN python create.py && python sample_data.py

# set permissions and create media directory
RUN chown www-data:www-data wuvt . && \
        (chown -f www-data:www-data wuvt/config.py wuvt.db || true ) && \
        (chmod -f 0600 wuvt/config.py wuvt.db || true) && \
        install -d -o www-data -g www-data /data/media && \
        install -d -o redis -g redis -m 0700 /var/lib/redis && \
        install -d -o redis -g redis -m 0700 /var/run/redis

EXPOSE 8080
ENTRYPOINT ["uwsgi", "--ini", "uwsgi_docker.ini:dev"]
